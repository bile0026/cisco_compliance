---
- name: Check for online hosts
  hosts: all
  gather_facts: false
  connection: network_cli
  vars:
    ansible_network_os: ios

  tasks:
    - name: Ping for reachability
      command: ping -c3 {{ inventory_hostname }}
      delegate_to: localhost
      register: ping_result
      ignore_errors: true
      check_mode: False

    - name: Group hosts by online
      group_by: key=reachable
      when: ping_result.rc == 0
      check_mode: False

- name: Check and set cisco compliance configuration items
  hosts: reachable
  gather_facts: False
  connection: network_cli
  vars:
    ansible_network_os: ios
  collections:
    - cisco.ios

  tasks:
    - include_vars: vars/vars.yml

    - name: Gather device information
      cisco.ios.ios_facts:

    - name: Generate 3560 Config
      template:
        src: templates/3560cx_compliance_template.j2
        dest: /tmp/{{ ansible_host }}.cfg

      # when: ansible_facts.ansible_net_model == 'WS-C3560CX-12PC-S'

      # add config templates for 9300 switches

      # add config templates for 9500 switches
    - name: Apply Configuration template
      cisco.ios.ios_config:
        backup: yes
        src: /tmp/{{ ansible_host }}.cfg
        diff_against: intended
        intended_config: /tmp/{{ ansible_host }}.cfg
      # save_when: modified
      register: config_results

    # - name: Save configuration when changes are made
    #   cisco.ios.ios_command:
    #     lines: "write memory"
    #   when: not ansible_check_mode and config_results.changed

    - name: Generate Report file
      blockinfile:
        dest: /tmp/Cisco_Compliance_Report.txt
        block: "{{ lookup('template', 'templates/report_template.j2') }}"
        marker: "; {mark} ANSIBLE MANAGED BLOCK FOR {{ ansible_net_hostname }}"
      delegate_to: localhost

    # - name: Generate report file
    #   template:
    #     src: templates/report_template.j2
    #     dest: /tmp/Cisco_Compliance_Report.txt
    #   delegate_to: localhost
    #   # run_once: True
    #   check_mode: False

    - name: Email non-compliance
      mail:
        from: "{{ from_email }}"
        to: "{{ email_address }}"
        subject: Compliance Report for "{{ lookup('pipe','date +%Y-%m-%d') }}"
        subtype: html
        attach: /tmp/Cisco_Compliance_Report.txt
        host: "{{ smtp_server }}"
        body:
      when: config_results.changed
      delegate_to: localhost
      run_once: True
      check_mode: False

    - name: Cleanup reports
      file:
        path: /tmp/Cisco_Compliance_Report.txt
        state: absent
      delegate_to: localhost
      run_once: True
      check_mode: False
